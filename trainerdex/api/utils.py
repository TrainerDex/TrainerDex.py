from inspect import isawaitable
from typing import Any, Callable, Union


def con(cls: Callable, *args, **kwargs) -> Union[Callable, Union[Any, None]]:
    """This is very hacky!

    Generates a converter function
    Returns the function if no addictional args or kwargs are supplied, else runs the function
    """

    def convert(*args, **kwargs) -> Union[Any, None]:
        """This is very hacky!

        Special converter function generated by :method:`tdx.client.utils.con`

        Attempts to return the output of a function, returns None if any exception occurs.

        ONLY USE THIS IF YOU KNOW WHAT YOU'RE DOING
        """
        try:
            return cls(*args, **kwargs)
        except:
            return None

    if args or kwargs:
        return convert(*args, **kwargs)
    else:
        return convert


async def maybe_coroutine(f, *args, **kwargs):
    value = f(*args, **kwargs)
    if isawaitable(value):
        return await value
    else:
        return value
